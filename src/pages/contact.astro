---
import Layout from "../layouts/Layout.astro";
import Toast from "../components/Toast.astro"
import { actions, isInputError } from "astro:actions";
const result = Astro.getActionResult(actions.send);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
result?.error ? console.log(result.error) : ""
---

<Layout title="Contact">
    <div class="flex flex-col w-full items-center bg-[#008080] p-5">
    <div class="flex flex-col sm:w-3/4 gap-3">
            <form
                method="post"
                action={actions.send}
                class="flex flex-col gap-5 text-sm w-full"
            >
            <div>
                <input
                    name="email"
                    type="email"
                    class="rounded-md focus:placeholder-[#008080] w-full"
                    placeholder="Email"
                    aria-describedby="error"
                />
                {inputErrors.email && <p class="text-gray-700 select-none"> {inputErrors.email.join(',')}</p>}
            </div>
            <div>
                <textarea
                    class="rounded-md focus:placeholder-[#008080] w-full"
                    placeholder="Message"
                    name="message"
                    rows="5"
                    aria-describedby="error"
                    required
                />
                {inputErrors.message && <p class="text-gray-700 select-none"> {inputErrors.message.join(',')}</p>}
            </div>
        <div class="flex flex-col items-start gap-3">
            <p class="text-gray-700 select-none">
                        Email is not required.
            </p>
            <button
                        type="submit"
                        class="bg-[#fbffee] cursor-pointer p-8 rounded-md text-gray-500 hover:text-gray-700 hover:font-bold py-1 border-gray-500"
            >
                        Submit
            </button>
        </div>
            </form>
    </div>
    </div>
    {(result && !result.error) ? (<Toast success={result.data.success} message={result.data.message} />) : null}
    {result?.error ? (<Toast success={false} message={{title: "Error", text: "Error while sending your message. Retry or email us" }} />) : null}
</Layout>
